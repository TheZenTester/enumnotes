#!/bin/bash
############################################################
# Help                                                     #
############################################################
Help()
{
   # Display Help
   echo "A reference guide for all the awesome pentesting notes."
   echo "Notes sourced from TJNull's awesome JPT File, and personalized over my pentesting journey"
   echo
   echo "Syntax: netexp category sub-category"
   echo
   echo "Categories:"
   echo "   recon       1) Reconnainssance - tcpdump, network scanning, nmap, DNS recon, dig, sublist3r, amass ,etc."
   echo "   enum        2) Enumeration - searches for common network services (Web, SMB, AD, SNMP, FTP, TCP, UDP, Other),"
   echo "                  and old notes from 0daysecurity, all possible techniques to try based on the open port."
   echo "   exp         3) Exploitation - default credentials, reverse shells, AV bypass, searchsploit, msfvenom, "
   echo "                  Windows AMSI bypass, netcat"
   echo "   postexp     4) Post-Exploitation - port redirection, priv esc, interestin files, compiling exploits, "
   echo "                  transferring files, C2 frameworks, bloodhound, impacket"
   echo "   hvi         5) High-Value Information - hashes, dumping hashes, identifying hash types, "
   echo "                  online/offline hash cracking, hash cracking wordlists"
   echo
}

############################################################
############################################################
# Main program                                             #
############################################################
############################################################
# Get the options
while getopts ":h" option; do
   case $option in
      h) # display Help
         Help
         exit;;
   esac
done

## Error Handling for incorrect categories
if [[ ! $1 =~ ^(recon|enum|exp|postexp|hvi)$ ]]; then
  echo "Invalid category entered: $1"
  echo "Valid Categories: recon, enum, exp, postexp, hvi"
  echo "Correct Syntax: netexp [category] [subcategory]"
  echo
  echo
  echo "Categories:"
  echo "   recon       1) Reconnainssance - tcpdump, network scanning, nmap, DNS recon, dig, sublist3r, amass ,etc."
  echo "   enum        2) Enumeration - searches for common network services (Web, SMB, AD, SNMP, FTP, TCP, UDP, Other),"
  echo "                  and old notes from 0daysecurity, all possible techniques to try based on the open port."
  echo "   exp         3) Exploitation - default credentials, reverse shells, AV bypass, searchsploit, msfvenom, "
  echo "                  Windows AMSI bypass, netcat"
  echo "   postexp     4) Post-Exploitation - port redirection, priv esc, interestin files, compiling exploits, "
  echo "                  transferring files, C2 frameworks, bloodhound, impacket"
  echo "   hvi         5) High-Value Information - hashes, dumping hashes, identifying hash types, "
  echo "                  online/offline hash cracking, hash cracking wordlists"
  echo
  exit
fi

# Error Handling for incorrect subcategories
if [ $1 = "recon" ] && [[ ! $2 =~ ^(general)$ ]]; then
   echo "Invalid Subcategory for recon: $2"
   echo "Valid Subcategories: general"
   echo
   echo "Subcategory Description:"
   echo "general     Output all commands: tcpdump, nmap, network/host scanning, dnsrecon, dig, sublist3r, amass"
   echo
   exit
elif [ $1 = "enum" ] && [[ ! $2 =~ ^(web|smb|ad|snmp|ftp|general)$ ]]; then
   echo "Invalid Subcategory for enum: $2"
   echo "Valid Subcategories: web, smb, ad, snmp, ftp, general"
   echo
   echo "Subcategory Description:"
   echo "web         enumeration tactics for web services. Includes: enumeration overview, directory scanning,"
   echo "            web app/directory scanning wordlists, web app scanners, local file inclusion (LFI) testing,"
   echo "            remote file inclusion (RFI), reverse shell, password guessing (hydra/wfuzz)"
   echo "smb         enumeration of SMB including: rpcclient, smbclient, crackmapexec, enum4linux/enum4linux-ng,"
   echo "            impacket, smbmap, SMB-specific nmap scans"
   echo "ad          Active Directory Enumeration: initial foothold enumeration, listing SMB shares, username mutation"
   echo "            username/SID enumeration, etc. Tools included: impacket, ldapsearch, getadusers, lookupsid,"
   echo "            rpcclient, secretsdump, psexec, wmiexec. Reference sheets: payloadallthethings, Attacking AD"
   echo "snmp        SNMP enumeration: snmpwalk, SNMP-specific nmap scripts, metasploit modules, "
   echo "            onesixtyone, snmp-check, impacket samdump"
   echo "ftp         FTP enumeration: manual/browswer connection, nmap scripts, enumeration steps/ideas"
   echo "general     WARNING: LARGE OUTPUT! - outputs the 0daysecurity list of possible enumeration steps"
   echo "            for commonly known ports (25-9100)."
   echo
   exit
elif [ $1 = "exp" ] && [[ ! $2 =~ ^(general|avbypass|ss|msfvenom|amsi|nc|bufoflow)$ ]]; then
   echo "Invalid Subcategory for enum: $2"
   echo "Valid Subcategories: general, avbypass, ss, msfvenom, amsi, nc, bufoflow"
   echo
   echo "Subcategory Description:"
   echo "general     prereqs for running exploits, default credentials links, reverse shell lists/examples "
   echo "            (netcat, bash, perl, python, IPv6, ruby, php, PowerShell, golang, awk)"
   echo "avbypass    resources to use for AV bypass: Veil framework, shellter, sharpshooter, donut, vulcan,"
   echo "            scarecrow"
   echo "ss          searchsploit syntax reference guide - install searchsploit/binsploits, basic searching,"
   echo "            search result exclusion, view exploits, copy exploit, website access, nmap scan analysis"
   echo "msfvenom    msfvenom syntax for creating payloads: windows, linux, web (PHP, ASP, JSP, WAR),"
   echo "            scripting (python, bash perl), encoding, templates"
   echo "amsi        Bypassing Windows AMSI resources: testing, PowerShell bypass & other resources"
   echo "nc          netcat tips"
   echo "bufoflow    references to learn buffer overflows"
   echo
   exit
elif [ $1 = "postexp" ] && [[ ! $2 =~ ^(general)$ ]]; then
   echo "Invalid Subcategory for postexp: $2"
   echo "Valid Subcategories:  general"
   echo
   echo "Subcategory Description:"
   exit
elif [ $1 = "hvi" ] && [[ ! $2 =~ ^(general)$ ]]; then
   echo "Invalid Subcategory for hvi: $2"
   echo "Valid Subcategories: general"
   echo
   echo "Subcategory Description:"
   exit
fi